@using WebApp
@using Newtonsoft.Json
@{
    var baseUrl = ViewData["baseUrl"];
	var filterColumn = ViewData["filterColumn"] as WebApp.Areas.Sys.Models.ConfigModel.ViewModel;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    var param = @Html.Raw(JsonConvert.SerializeObject(ViewData["param"]));
    var displayName = @Html.Raw(JsonConvert.SerializeObject(ViewData["displayItem"]));
    var pkKey = @Html.Raw(JsonConvert.SerializeObject(ViewData["pkKey"]));
    var j_data = @Html.Raw(JsonConvert.SerializeObject(ViewData["column_att"]));
    var colNameTooltip_sys_config = [];
    var colbuttonCount_sys_config = 0;
    var columnWidth = 40;
    colbuttonCount_sys_config += param.btnView == 1 ? 1 : 0;
    colbuttonCount_sys_config += param.btnEdit== "1" ? 1 : 0;
    colbuttonCount_sys_config += param.btnDelete == "1" ? 1 : 0;
    colbuttonCount_sys_config += param.btnCopy  == "1" ? 1 : 0;
    if (colbuttonCount_sys_config == 1) { columnWidth = 40; } else if (colbuttonCount_sys_config == 2) { columnWidth = 60; } else if (colbuttonCount_sys_config == 3) { columnWidth = 95; } else if (colbuttonCount_sys_config == 4) { columnWidth = 120; }
    var columnActionWidth_sys_config = columnWidth + "px";
    var item_data = "";
    var col_att = [];
    var showhide_column = "";
    var j = 0;
    var checked = '';
    jQuery.each(j_data, function (i, val) {
        item_data += item_data != "" ? "," : "";
        item_data += '"' + val.name + '" : { "type": "' + val.type + '" } ';
        if (val.display) {
            col_att[j] = { field: val.name, title: val.title, hidden: JSON.parse(val.hidden), width: val.width, format: val.format, attributes: JSON.parse(val.attributes), encoded: JSON.parse(val.encoded), filterable: JSON.parse(val.filterable), sortable: JSON.parse(val.sortable), headerAttributes: { style: "white-space: normal;vertical-align:middle;text-align:center" } };
            j++;
            checked = '';if (val.hidden.toString() == 'false') {checked = 'checked';}
            showhide_column += '<div><input type="checkbox" onclick="ShowHideColumn_sys_config(this)" '+ checked +' value="' + val.name + '" /> ' + val.title + '</div>';
        }
    });
    showhide_column += '<div><input type="checkbox" onclick="ShowHideColumn_sys_config(this)" checked value="' + j + '" /> Action</div>';
    item_data = '{' + item_data + '}';
    var field_data = JSON.parse(item_data);
    var columns_data = col_att;
    var col_command = [];
    var k = 0;
    if (param.btnView== 1) {col_command[k] = { name: "View", text: "", className: "v-view", click: function (e) { var tr = $(e.target).closest("tr"); var data = this.dataItem(tr); ViewItem_sys_config(data); } };k++;}
    if (param.btnEdit== 1) {col_command[k] = { name: "Edit", text: "", className: "v-pencil", click: function (e) { var tr = $(e.target).closest("tr"); var data = this.dataItem(tr); EditData_sys_config(data); } };k++;}
    if (param.btnDelete== 1) {col_command[k] = { name: "Delete", text: "", className: "v-close", click: function (e) { var tr = $(e.target).closest("tr"); var data = this.dataItem(tr); DeleteData_sys_config(data); } };k++;}
    if (param.btnCopy == 1) { col_command[k] = { name: "Copy", text: "", className: "v-copy", click: function (e) { var tr = $(e.target).closest("tr"); var data = this.dataItem(tr); CopyData_sys_config(data); } }; k++; }
    if (colbuttonCount_sys_config > 0) {
        columns_data[j] = {command: col_command, width: columnActionWidth_sys_config, attributes: " style=\"vertical-align:top;\""};
    }
</script>
<div class="card">
    <div class="card-header">
        <div class="title-header">@ViewData["TitleHeader"]</div>
    </div>
    <div class="card-body">
        <div class="container-fluid">
            <div id="filter_area" class="grid_filter">
                <div class="panel-group">
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <h8 class="panel-title">
                                <a id="btnShowHideFilter" data-toggle="collapse" href="#collapse1">@ResxHelper.GetValue("Message", "ShowFilter", "Tampilkan Filter")</a>
                            </h8>
                        </div>
                        <div id="collapse1" class="panel-collapse collapse">
                            <div class="panel-body">
                                        <div class="item_grid_filter" id="fiter_category">
                                            <label for="category">@ResxHelper.GetValue("sys_config", "category"): </label>
                                            <input id="category" name="category" style="width: #control_width#px;" />
                                            <script>
                                                var category_param = { item: { value: 'category', text: 'category', distinct: '1' } ,parent:[], order:[{ field: 'category', dir: 'asc' }]};
                                                var category_ds = new kendo.data.DataSource({ transport: { read: { url: "@baseUrl/Sys/Config/LookupData", dataType: "json", data: category_param, type: "POST" } } });
                                                var category = $("#category").kendoComboBox({ filter: "contains", placeholder: "", dataTextField: "text", dataValueField: "value", change: onChange_category, dataSource: category_ds }).data("kendoComboBox");
                                                $(document).ready(function () { $("#category").data("kendoComboBox").value('@filterColumn.category'); });
                                                function onChange_category() {
                                                    if ($("#category").data("kendoComboBox").value() != '' && $("#category").data("kendoComboBox")._oldIndex == -1) { $("#category").data("kendoComboBox").value(''); }
                                                    onFilterHeader_sys_config();
                                                }
                                                
                                            </script>
                                        </div>

                            </div>
                            <div class="panel-footer">
                                <a id="btnResetFilter" onclick="reset_filter_sys_config()" class="k-button" title="Reset Filter">@ResxHelper.GetValue("Message", "ResetFilter", "Reset Filter")</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <table id="toolbar_panel" style="width:100%;">
                    <tr>
                        <td>
                            <span id="quick_search_template_sys_config" class="k-textbox k-space-right"><input id="txtSearch_sys_config" placeholder="@ResxHelper.GetValue("Message","QuickSearch")" value="" /><a id="btnSearch_sys_config" href="#" class="k-icon k-i-search">&nbsp;</a></span>
                            <img id="btnSearchByColumn_sys_config" title="@ResxHelper.GetValue("Message","ShowSearchByColumn")" style="cursor:pointer" src="~/img/search_by_column.png" width="20">
                            <img id="btnShowHideColumn_sys_config" title="@ResxHelper.GetValue("Message","ShowHideColumn")" style="cursor:pointer" src="~/img/show_hide_column.png" width="20">
                        </td>
                        <td style="float:right">
                            <img id="btnExportExcel_sys_config" title="@ResxHelper.GetValue("Message","ExportToExcel")" style="cursor:pointer" src="~/img/excel.png" width="20" />&nbsp;
                            <a id="btnAdd_sys_config" onclick="AddData_sys_config()" class="k-button" title="@ResxHelper.GetValue("Message","Add")">@ResxHelper.GetValue("Message", "Add", "Tambah")</a>
                        </td>
                    <tr>
                </table>
            </div>
            <div id="grid_sys_config"></div>
        </div>
    </div>
</div>
<div id="WinShowHideColumn_sys_config" style="display: none">
    <div id="attr_column_show_hide" style="width:auto;height:auto;overflow-y:scroll;"></div>
</div>

@{
    <script>
    $("#collapse1").on('shown.bs.collapse', function () {
        $("#btnShowHideFilter").html('@ResxHelper.GetValue("Message","HideFilter")');
    });
    $("#collapse1").on('hidden.bs.collapse', function () {
        $("#btnShowHideFilter").html('@ResxHelper.GetValue("Message","ShowFilter")');
    });
    var record_sys_config = 0;
    var grid_sys_config_heigth = 0;
    var ds_sys_config_filter = { filter_by_column: [] };
    var ds_sys_config = new kendo.data.DataSource({ transport: { read: { url: "@ViewData["UrlGetList"]", dataType: "json", type: "POST", data: ds_sys_config_filter }, parameterMap: function (options) { if (options.filter) { for (var i = 0; i < options.filter.filters.length; i++) { if (options.filter.filters[i].field == 'tanggal') { options.filter.filters[i].value = kendo.toString(options.filter.filters[i].value, "yyyy-MM-dd"); } } } return options; } }, schema: { data: "data", total: "total", aggregates: "aggregates", model: { fields: field_data } }, aggregate: [], pageSize: 10, serverAggregates: true, serverPaging: true, serverFiltering: true, serverSorting: true });
    var list_sys_config = $("#grid_sys_config").kendoGrid({
        excel: { allPages: true, fileName: '@ViewData["TitleHeader"]'+'.xlsx' },
        dataSource: ds_sys_config, dataBound: onDataBound_sys_config, height: grid_sys_config_heigth, scrollable: true, groupable: false, columnMenu: false, menu: true, resizable: true, filterable: false, sortable: { mode: "multiple", allowUnsort: true }, pageable: { refresh: true, pageSizes: [5, 10, 20, 50, 100, 200], buttonCount: 5 },
        columns: columns_data, editable: false, dataBinding: function () { $(".k-grid-content").css("min-height", "320px"); record_sys_config = (this.dataSource.page() - 1) * this.dataSource.pageSize(); }
    });
    function getParamgrid_sys_config() {
        var filter_by_column= [];var k = 0;
        if ($("#category").data("kendoComboBox").value() != "") {filter_by_column[k] = { name: "category", field: "sys_config.category", opr: "=", value: $("#category").data("kendoComboBox").value() };k++;}

        return { filter_by_column:filter_by_column };
    }
    function reset_filter_sys_config() {
        $("#category").data("kendoComboBox").value('');

        onFilterHeader_sys_config();
    }
    function onFilterHeader_sys_config() {
        $("#txtSearch_sys_config").val('');
        paramValue = getParamgrid_sys_config();
        if (list_sys_config.data('kendoGrid').dataSource.page() > 1) {
            list_sys_config.data('kendoGrid').dataSource.page(0);
        }
        list_sys_config.data('kendoGrid').dataSource.transport.options.read.data = paramValue;
        list_sys_config.data("kendoGrid").dataSource.filter([]);
    };
    $("#btnSearchByColumn_sys_config").click(function () { var grid_sys_config_heigth_filter = grid_sys_config_heigth + 38; if (list_sys_config.data("kendoGrid").options.filterable == false) { $('#btnSearchByColumn_sys_config').prop('title', '@ResxHelper.GetValue("Message","HideSearchByColumn")'); $("#txtSearch_sys_config").val(''); if ('1' == '1') { $("#quick_search_template_sys_config").hide(); }; QuickSearch_sys_config(); list_sys_config.data("kendoGrid").setOptions({ height: grid_sys_config_heigth_filter, filterable: { mode: "row" }, }); } else { $('#btnSearchByColumn_sys_config').prop('title', '@ResxHelper.GetValue("Message","ShowSearchByColumn")'); $("#txtSearch_sys_config").val(''); if ('1' == '1') { $("#quick_search_template_sys_config").show(); }; QuickSearch_sys_config(); list_sys_config.data("kendoGrid").setOptions({ height: grid_sys_config_heigth, filterable: false, }); } });
    $("#btnSearch_sys_config").click(function () { QuickSearch_sys_config(); });
    $('#txtSearch_sys_config').keypress(function (e) { if (e.keyCode == 13) { QuickSearch_sys_config(); } });
    function QuickSearch_sys_config() {
        $filter = new Array();
        $x = $("#txtSearch_sys_config").val();
        if ($x) {jQuery.each(j_data, function (i, val) {if (val.display && val.qsearch && val.type =='string') {$filter.push({ name: val.name, opr: "contains", value: $x });}});} 
        if ($filter.length > 0) {list_sys_config.data("kendoGrid").dataSource.filter({ logic: "or", filters: $filter });}else {list_sys_config.data("kendoGrid").dataSource.filter([]);}
    }
    function Reload_list_sys_config() { list_sys_config.data('kendoGrid').dataSource.read(); list_sys_config.data('kendoGrid').refresh(); }
    function onDataBound_sys_config(e) {
        if (colbuttonCount_sys_config > 0) {
            var grid = $("#grid_sys_config").data("kendoGrid"); var list_sys_config = grid.dataSource.view();
            for (var i = 0; i < list_sys_config.length; i++) {
                var currentUid = list_sys_config[i].uid; var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                if (param.btnView == 1) {
                    var viewButton = $(currenRow).find(".k-grid-View"); viewButton.attr("title", "@ResxHelper.GetValue("Message","View")");
                    if ("@ViewData["AllowView"]" == "1") {} else {viewButton.hide();}
                }
                if (param.btnEdit == 1) {
                    var editButton = $(currenRow).find(".k-grid-Edit"); editButton.attr("title", "@ResxHelper.GetValue("Message","Edit")");
                    if ("@ViewData["AllowEdit"]" == "1") {} else {editButton.hide();}
                }
                if (param.btnDelete == 1) {
                    var deleteButton = $(currenRow).find(".k-grid-Delete"); deleteButton.attr("title", "@ResxHelper.GetValue("Message","Delete")");
                    if ("@ViewData["AllowDelete"]" == "1") {} else {deleteButton.hide();}
                }
                if (param.btnCopy == 1) {
                    var copyButton = $(currenRow).find(".k-grid-Copy"); copyButton.attr("title", "@ResxHelper.GetValue("Message","Copy")");
                    if ("@ViewData["AllowAdd"]" == "1") {} else {copyButton.hide();}
                }
            }
        }
    }
    function AddData_sys_config() {var contentUrl = '@ViewData["UrlAdd"]'; var form_edit = $("#dialog").kendoWindow({ iframe: true, content: { url: contentUrl }, actions: ["Minimize", "Maximize", "Close"], close: onCloseDialog, }); form_edit.data("kendoWindow").setOptions({ title: "", modal: true, resizable: true, width: param.btn_add_modal_width, height: param.btn_add_modal_height, minHeight: 300, });if(param.btn_add_modal_width == 0) {form_edit.data("kendoWindow").center().open().maximize()} else {form_edit.data("kendoWindow").center().open();}}
    function ViewItem_sys_config(data) { var qs = '';jQuery.each(pkKey, function (i, val) {qs += qs != "" ? "&" : "";qs += val+'=' + data[val];});var contentUrl = '@ViewData["UrlView"]?' + qs; var form_edit = $("#dialog").kendoWindow({ iframe: true, content: { url: contentUrl }, actions: ["Minimize", "Maximize", "Close"], close: onCloseDialog }); form_edit.data("kendoWindow").setOptions({ title: "", modal: true, resizable: true, width: param.btn_view_modal_width, height: param.btn_view_modal_height, minHeight: 300, }); if (param.btn_view_modal_width == 0) { form_edit.data("kendoWindow").center().open().maximize() } else { form_edit.data("kendoWindow").center().open(); }}
    function EditData_sys_config(data) { var qs = '';jQuery.each(pkKey, function (i, val) {qs += qs != "" ? "&" : "";qs += val+'=' + data[val];}); var contentUrl = '@ViewData["UrlEdit"]?' + qs; var form_edit = $("#dialog").kendoWindow({ iframe: true, content: { url: contentUrl }, actions: ["Minimize", "Maximize", "Close"], close: onCloseDialog }); form_edit.data("kendoWindow").setOptions({ title: "", modal: true, resizable: true, width: param.btn_edit_modal_width, height: param.btn_edit_modal_height, minHeight: 300, }); if(param.btn_edit_modal_width == 0) {form_edit.data("kendoWindow").center().open().maximize()} else {form_edit.data("kendoWindow").center().open();} }
    function CopyData_sys_config(data) { var qs = '';jQuery.each(pkKey, function (i, val) {qs += qs != "" ? "&" : "";qs += val+'=' + data[val];}); var contentUrl = '@ViewData["UrlCopy"]?' + qs; var form_edit = $("#dialog").kendoWindow({ iframe: true, content: { url: contentUrl }, actions: ["Minimize", "Maximize", "Close"], close: onCloseDialog }); form_edit.data("kendoWindow").setOptions({ title: "", modal: true, resizable: true, width: param.btn_edit_modal_width, height: param.btn_edit_modal_height, minHeight: 300, }); if(param.btn_edit_modal_width == 0) {form_edit.data("kendoWindow").center().open().maximize()} else {form_edit.data("kendoWindow").center().open();} }
    function DeleteData_sys_config(data) {
        var keyValue = '';
        jQuery.each(displayName, function (i, val) {
            keyValue += keyValue != "" ? "<br />" : "";
            keyValue += val.label+ ": " + data[val.name];
        });
        var pkItem = "";
        jQuery.each(pkKey, function (i, val) {
            pkItem += pkItem != "" ? ", " : "";
            pkItem += '"'+val+'":"'+data[val]+'" ';
        });
        var pkVal = jQuery.parseJSON("{" + pkItem + "}");
        var data2 = { title: '@ResxHelper.GetValue("Message","ConfirmDelete")', msg: keyValue };
        var winconfirm = $("#dialogconfirm").kendoWindow({ title: "@ResxHelper.GetValue("Message","DeleteData")", modal: true, visible: false, resizable: true, draggable: true, width: "500px", height: "200px" }).data("kendoWindow");
        winconfirm.content(confirmTemplate(data2));
        winconfirm.center(); winconfirm.open();
        $("#yesButton").click(function () {
            $.ajax({
                data: pkVal, url: '@ViewData["UrlDelete"]', type: 'POST'
                , success: function (data) {
                    if (data.status != 1) {
                        notification.show({ title: data.title, message: kendo.toString(data.message) }, "error");
                        winconfirm.close();
                    } else {
                        notification.show({ message: kendo.toString(data.message) }, "success");
                        Reload_list_sys_config();
                        winconfirm.close();
                    }
                }
            });
        });
        $("#noButton").click(function () { winconfirm.close(); });
    }
    function onCloseDialog(e) { $('#dialog').html(''); }
    function closeDialog() { $("#dialog").data("kendoWindow").close(); }
    $("#btnExportExcel_sys_config").click(function (e) { var grid = $("#grid_sys_config").data("kendoGrid"); grid.saveAsExcel(); });
    function ShowHideColumn_sys_config(e) { colname = $.isNumeric(e.value) ? parseInt(e.value) : e.value; if (e.checked) { $("#grid_sys_config").data("kendoGrid").showColumn(colname); } else { $("#grid_sys_config").data("kendoGrid").hideColumn(colname); } }
    $(document).ready(function () {
        $("#attr_column_show_hide").html(showhide_column);
        if (param.ShowFilter != 1) { $("#filter_area").hide(); }
        if (param.btnAdd != 1) { $("#btnAdd_sys_config").hide(); }
        if (param.quick_search != 1) { $("#quick_search_template_sys_config").hide(); }
        if (param.search_by_column  != 1) { $("#btnSearchByColumn_sys_config").hide(); }
        if (param.show_hide_column != 1) { $("#btnShowHideColumn_sys_config").hide(); }
        if (param.export_exl != 1) { $("#btnExportExcel_sys_config").hide(); }
        $("#btnShowHideColumn_sys_config").click(function () { var x = $("#btnShowHideColumn_sys_config").offset().left; var y = $("#btnShowHideColumn_sys_config").offset().top; if (!WinShowHideColumn_sys_config) { var WinShowHideColumn_sys_config = $("#WinShowHideColumn_sys_config").kendoWindow({ width: "300px", position: { left: x, top: y }, title: "@ResxHelper.GetValue("Message","ShowHideColumn")", actions: ["Close"] }); } WinShowHideColumn_sys_config.data("kendoWindow").open(); });
    });

    </script>
}