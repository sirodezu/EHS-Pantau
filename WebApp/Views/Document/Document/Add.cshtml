@using WebApp
@using Microsoft.AspNetCore.Http;
@{
    Layout = "~/Views/Shared/_LayoutNoHeader.cshtml";
    var fieldModel = ViewData["fieldModel"] as WebApp.Models.DocumentModel.ViewModel;
    ViewData["Title"] = ViewData["TitleHeader"];
    ViewData["PageName"] = "document";
    ViewData["Heading"] = ViewData["TitleHeader"];
    ViewData["Category1"] = "";
    ViewData["Category2"] = "";
}

<form id="form_edit" method="post" class="panel-form">
    <div class="panel">
        <div class="panel-heading">
            <div class="title-header">@ViewData["TitleHeader"]</div>
        </div>
        <div class="panel-container">
            <div class="panel-content">

                <div class="row">
                    <div class="col-lg-12">

                        <div id="form_item_folder_path" class="form-group">
                            <div class="form-item-label">@ResxHelper.GetValue("ta_document_nm", "folder_path")<span id="label_req_folder_path" class="required"> *</span></div>
                            <div class="form-item-separator">:</div>
                            <div id="field_item_folder_path" class="form-item-field">
                                <input type="text" id="folder_path" name="folder_path" class="k-autocomplete" required data-required-msg="@ResxHelper.GetValue("Message","RequiredTextFormat").Replace("{0}",@ResxHelper.GetValue("ta_document_nm","folder_path"))" maxlength="255" style="width:350px;" value="@Html.Raw(fieldModel.folder_path)" title="@ResxHelper.GetValue("ta_document_nm", "folder_path") @ResxHelper.GetValue("Message", "IsNotValidCharacter")." pattern="@ConfigHelper.GetValue("AllowInputCharacters")" />
                                <span class="k-invalid-msg" data-for="folder_path"></span>
                            </div>
                        </div>
                        <div id="form_item_file_name" class="form-group">
                            <div class="form-item-label">@ResxHelper.GetValue("ta_document_nm", "file_name")<span id="label_req_file_name" class="required"> *</span></div>
                            <div class="form-item-separator">:</div>
                            <div id="field_item_file_name" class="form-item-field">
                                <input name="file_name_file" id="file_name_file" type="file" />
                                <input name="file_name" id="file_name" type="hidden" value="@fieldModel.file_name" required data-required-msg="@ResxHelper.GetValue("Message", "RequiredTextFormat").Replace("{0}", @ResxHelper.GetValue("ta_document_nm", "file_name"))" />
                                <script>
                                var file_name_init = @Html.Raw(fieldModel.file_name_init);
                                $("#file_name_file").kendoUpload({multiple:true,
                                    async: {
                                        saveUrl: "@ViewBag.BaseUrl/Document/save_file_name_nm",
                                        removeUrl: "@ViewBag.BaseUrl/Document/remove_file_name_nm",
                                        autoUpload: true
                                    },
                                    validation: {allowedExtensions: [".jpg", ".jpeg", ".png", ".pdf", ".xls", ".xlsx"], maxFileSize: 5242880},
                                    files: file_name_init,
                                    success: onSuccessUpload,
                                    select: OnselectUpload_file_name
                                });
                                function OnselectUpload_file_name(e) {OnselectUpload(e, 2);}
                                </script>
                                <span class="k-label k-text-info">Allowed Extensions: ".jpg", ".jpeg", ".png", ".pdf", ".xls", ".xlsx"</span>
                                <br /><span class="k-label k-text-info">Maximum FileSize: @String.Format("{0:N0}", (5242880 / 1024)) KB</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <a id="cancel" class="k-button k-button-icontext" href="#"><i class="far fa-times-circle"></i>&nbsp;<span id="btnCancelText">@ResxHelper.GetValue("Message", "Cancel")</span></a>
                <a id="save" class="k-button k-button-icontext" href="#"><i class="fas fa-save"></i>&nbsp;<span id="btnSaveText">@ResxHelper.GetValue("Message", "Save")</span></a>
            </div>
        </div>
    </div>
</form>
<script>
    var form_type = '@ViewData["form_type"]';
    function ShowHideColumn(form_type)
    {
        if(form_type=='Add')
        {
            var hiden_column = [];
            for (i = 0; i < hiden_column.length; i++) {
                $("#form_item_"+hiden_column[i]).hide();
            }
        }
        else if(form_type=='Edit')
        {
            var hiden_column = [];
            for (i = 0; i < hiden_column.length; i++) {
                $("#form_item_"+hiden_column[i]).hide();
            }
        }
    }
    function setReadOnly(form_type,opt)
    {
        if(opt==true)
        {
            if(form_type=='Add')
            {

            }
            else if(form_type=='Edit')
            {

            }
        }
        else
        {
            if(form_type=='Add')
            {

            }
            else if(form_type=='Edit')
            {

            }
        }
    }
    function display_by_type() {
        $("#folder_path").kendoAutoComplete({
            dataTextField: "folderPath",
            placeholder: "",
            filter: "contains",
            minLength: 1,
            dataSource: {
                type: "json",
                transport: {
                    read: "@ViewBag.BaseUrl/Document/LookupDataPath"
                }
            }
        });
    }
    $(document).ready(function () {
        ShowHideColumn(form_type);
        setReadOnly(form_type, true);
        display_by_type();
    });
    var validatable = $("#form_edit").kendoValidator().data("kendoValidator");
    $("#save").click(function (e) {
        getListFileUpload("file_name");
		setReadOnly(form_type, false);
        if (validatable.validate() === true) {
            kendo.ui.progress($("#form_edit"), true);
            $.ajax({
                url: '@ViewData["UrlAction"]', data: $('#form_edit').serialize(), type: 'POST',
                success: function (data) {
                    kendo.ui.progress($("#form_edit"), false);
                    if (data.status == 1) {
                        window.parent.notification.show({title: data.title, message: kendo.toString(data.message) }, "success");
                        if (window.parent.Reload_list_ta_document) {
                            window.parent.Reload_list_ta_document();
                        }else if (window.parent.reload_ta_document) {
                            window.parent.reload_ta_document(data.pk);
                        }
                        close_self();
                    } else if (data.status == 3) {
                        windows.parent.notification.show({ title: data.title, message: data.message }, "error");
                        setReadOnly(form_type, true);
						close_self();
                    } else {
						setReadOnly(form_type, true);
                        notification.show({ title: data.title, message: data.message }, "error");
                    }
                }
            });
        } else {
            kendo.ui.progress($("#form_edit"), false);
        }
		setReadOnly(form_type, true);
    });
    $("#cancel").kendoButton();
    $("#cancel").click(function (e) {
        close_self();
    });
    function close_self() { if (window.parent.$("#dialog_ta_document").data("kendoWindow")) { window.parent.$("#dialog_ta_document").data("kendoWindow").close(); } else { window.parent.$("#dialog").data("kendoWindow").close(); } }
</script>